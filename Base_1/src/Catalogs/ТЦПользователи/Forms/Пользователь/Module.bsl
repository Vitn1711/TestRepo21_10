&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Попытка
		ДатаНачала = ТекущаяДата();
		УстановитьНачальныеЗначения();
	Исключение
		Ошибка = ИнформацияОбОшибке();
		ТЦОбщий.ЗаписатьВЖурнал(Ошибка);
		ТЦКлиент.СообщитьОбОшибке(Ошибка, ДатаНачала, ТекущаяДата());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Попытка
		ДатаНачала = ТекущаяДата();
		ЗаполнитьСписокПользователей();
	Исключение
		Ошибка = ИнформацияОбОшибке();
		ТЦОбщий.ЗаписатьВЖурнал(Ошибка);
		ТЦКлиент.СообщитьОбОшибке(Ошибка, ДатаНачала, ТекущаяДата());
	КонецПопытки;
	
КонецПроцедуры // НаименованиеНачалоВыбораИзСписка()

&НаКлиенте
Процедура НаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Попытка
		ДатаНачала = ТекущаяДата();
		ВыбратьПользователя(ВыбранноеЗначение);
	Исключение
		Ошибка = ИнформацияОбОшибке();
		ТЦОбщий.ЗаписатьВЖурнал(Ошибка);
		ТЦКлиент.СообщитьОбОшибке(Ошибка, ДатаНачала, ТекущаяДата());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
// Установить начальные значения параметров формы
//
Процедура УстановитьНачальныеЗначения()
	
	ЗаполнитьСписокПользователей();
	
	Для каждого СтрокаСписка Из Элементы.Имя.СписокВыбора Цикл
		Значение = ПараметрыПользователя[СтрокаСписка.Значение - 1];
		
		Если Объект.Имя = Значение.Имя И Объект.ТипАутентификации = Значение.Тип Тогда
			Имя = СтрокаСписка.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // УстановитьНачальныеЗначения()

&НаСервере
// Получить представление имени пользователя
//
// Параметры:
//  Имя - Строка, имя пользователя информационной базы
//
// Возвращаемое значение:
//  Строка - полное имя пользователя
//
Функция ПредставлениеИмени(Имя, Тип, ИмяОС)
	
	Представление = Имя;
	
	Если Тип = Перечисления.ТЦТипАутентификации.АутентификацияОС Тогда
		Представление = Представление + " (" + ИмяОС + ")";
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции // ПредставлениеИмени()

&НаСервере
// Выполнить все, что необходимо при выборе пользователя
//
// Параметры:
//  Пользователь - Структура, описывающая пользователя
//   Имя - Строка, имя пользователя информационной базы
//   Тип - ПеречислениеСсылка.ТЦТипАутентификации
//   ИмяОС - Строка, имя пользователя ОС, если применимо
//
Процедура ВыбратьПользователя(НомерПараметра)
	
	Пользователь = ПараметрыПользователя[НомерПараметра - 1];
	Представление = ПредставлениеИмени(
			Пользователь.Имя,
			Пользователь.Тип,
			Пользователь.ИмяОС);
	
	ТекущийОбъект = ДанныеФормыВЗначение(Объект, Тип("СправочникОбъект.ТЦПользователи"));
	ИзмененоНаименование = ТекущийОбъект.Имя <> Пользователь.Имя;
	ИзмененТип = ТекущийОбъект.ТипАутентификации <> Пользователь.Тип;;
	Модифицированность = ИзмененоНаименование ИЛИ ИзмененТип;
	ТекущийОбъект.Наименование = Представление;
	ТекущийОбъект.Имя = Пользователь.Имя;
	ТекущийОбъект.ТипАутентификации = Пользователь.Тип;
	ЗначениеВДанныеФормы(ТекущийОбъект, Объект);
	
КонецПроцедуры // ВыбратьПользователя()

&НаСервере
// Заполнить список пользователей
//
Процедура ЗаполнитьСписокПользователей()
	
	Перем Пользователи;
	Пользователи = ПользователиИнформационнойБазы.ПолучитьПользователей();
	
	Если Пользователи.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаПользователей = Новый ТаблицаЗначений;
	ТипСтрока150 = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(150));
	ТипСтрока = Новый ОписаниеТипов("Строка");
	ТипТип = Новый ОписаниеТипов("ПеречислениеСсылка.ТЦТипАутентификации");
	ТаблицаПользователей.Колонки.Добавить("Имя", ТипСтрока150);
	ТаблицаПользователей.Колонки.Добавить("Тип", ТипТип);
	ТаблицаПользователей.Колонки.Добавить("ИмяОС", ТипСтрока);
	
	Для каждого Пользователь Из Пользователи Цикл
		Если Найти(Пользователь.Имя, "_ТЦ_") > 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Пользователь.АутентификацияОС Тогда
			СтрокаПользователя = ТаблицаПользователей.Добавить();
			СтрокаПользователя.Имя = Пользователь.Имя;
			СтрокаПользователя.ИмяОС = Пользователь.ПользовательОС;
			СтрокаПользователя.Тип = Перечисления.ТЦТипАутентификации.АутентификацияОС;
		КонецЕсли;
		
		Если Пользователь.АутентификацияСтандартная Тогда
			СтрокаПользователя = ТаблицаПользователей.Добавить();
			СтрокаПользователя.Имя = Пользователь.Имя;
			СтрокаПользователя.Тип = Перечисления.ТЦТипАутентификации.Аутентификация1С;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Пользователи", ТаблицаПользователей);
	Запрос.УстановитьПараметр("ИмяИсключения", Объект.Имя);
	Запрос.УстановитьПараметр("ТипИсключения", Объект.ТипАутентификации);
		
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	Пользователи.Имя,
		|	Пользователи.Тип,
		|	Пользователи.ИмяОС
		|ПОМЕСТИТЬ
		|	ВсеПользователи
		|ИЗ
		|	&Пользователи КАК Пользователи
		|;
		|
		|ВЫБРАТЬ
		|	Имя,
		|	Тип,
		|	ИмяОС
		|ИЗ
		|	ВсеПользователи
		|ГДЕ
		|	НЕ (Имя, Тип) В
		|	(
		|		ВЫБРАТЬ
		|			Имя,
		|			ТипАутентификации
		|		ИЗ
		|			Справочник.ТЦПользователи
		|		ГДЕ
		|			НЕ (Имя = &ИмяИсключения И ТипАутентификации = &ТипИсключения)
		|	)
		|УПОРЯДОЧИТЬ ПО
		|	Имя,
		|	Тип";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПараметрыПользователя.Очистить();
	СписокВыбора = Элементы.Имя.СписокВыбора;
	СписокВыбора.Очистить();
	
	Пока Выборка.Следующий() Цикл
		Пользователь = ПараметрыПользователя.Добавить();
		Пользователь.Имя = Выборка.Имя;
		Пользователь.Тип = Выборка.Тип;
		Пользователь.ИмяОС = Выборка.ИмяОС;
		
		Представление = ПредставлениеИмени(
			Пользователь.Имя,
			Пользователь.Тип,
			Пользователь.ИмяОС);
		
		ЭлементВыбора = СписокВыбора.Добавить(
			ПараметрыПользователя.Количество(),
			Представление);
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьСписокПользователей()
