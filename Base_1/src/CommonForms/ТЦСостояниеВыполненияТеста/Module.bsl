&НаКлиенте
Перем мТест;
&НаКлиенте
Перем кНеопределено;
&НаКлиенте
Перем кУспешно;
&НаКлиенте
Перем кПредупреждение;
&НаКлиенте
Перем кОшибка;
&НаКлиенте
Перем мОстановлен;


///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

&НаКлиенте
// Обработчик открытия формы
//
Процедура ПриОткрытии(Отказ)
	
	Попытка
		мОстановлен = Ложь;
		ДатаНачала = ТекущаяДата();
		Инициализировать();
		ПриВыполненииТестирования();
		ПодключитьОбработчикОжидания("ПриВыполненииТестирования", 3);
	Исключение
		Ошибка = ИнформацияОбОшибке();
		ТЦОбщий.ЗаписатьВЖурнал(Ошибка);
		ТЦКлиент.СообщитьОбОшибке(Ошибка, ДатаНачала, ТекущаяДата());
	КонецПопытки;
	
КонецПроцедуры // ПриОткрытии()


///////////////////////////////////////////////////////////////////////////////
// УПРАВЛЕНИЕ ФОРМОЙ

&НаКлиенте
// Обработчик выполнения тестирования
//
Процедура ПриВыполненииТестирования()
	
	Попытка
		ДатаНачала = ТекущаяДата();
		СостояниеТеста = ПриВыполненииТестированияНаСервере(мТест);
	
		Если СостояниеТеста.ПаузаПослеЗапускаВРМ И СостояниеТеста.ВРМЗапущены Тогда
			ОтключитьОбработчикОжидания("ПриВыполненииТестирования");
			Предупреждение("ВРМ запущены. Нажмите ""ОК"", для продолжения выполнения теста.");
			ТЦСервер.ПродолжитьТестПослеПаузыВРМ(мТест);
			ПодключитьОбработчикОжидания("ПриВыполненииТестирования", 1);
		КонецЕсли;
		
		РезультатТеста = СостояниеТеста.Результат;
		
		Если РезультатТеста = кНеопределено Тогда
			Возврат;
		Иначе
			ОтключитьОбработчикОжидания("ПриВыполненииТестирования");
			Элементы.Стоп.Доступность = Ложь;
			ЕстьОшибки = РезультатТеста = кОшибка Или РезультатТеста = кПредупреждение;
			
			Если ЕстьОшибки Тогда
				ТЦКлиент.СообщитьОбОшибке(
					СостояниеТеста.ИнформацияОбОшибке,
					СостояниеТеста.ДатаНачала,
					СостояниеТеста.ДатаОкончания);
				мОстановлен = Истина;
				ТЦКлиент.ВыполнитьТестирование();
			КонецЕсли;
			
			мОстановлен = Истина;
			ТЦКлиент.ПоказатьРезультатыТеста(мТест);
		КонецЕсли;
	Исключение
		Ошибка = ИнформацияОбОшибке();
		ТЦОбщий.ЗаписатьВЖурнал(Ошибка);
		ТЦКлиент.СообщитьОбОшибке(Ошибка, ДатаНачала, ТекущаяДата());
		мОстановлен = Истина;
		ТЦКлиент.ВыполнитьТестирование();
	КонецПопытки;
	
КонецПроцедуры // ПриВыполненииТестирования()

&НаСервере
// Обновить информацию о состоянии теста на стороне сервера
//
// Параметры:
//  Тест - ДокументСсылка.ТЦТест
//
// Возвращаемое значение:
//  Структура - описание состояния тестирования
//
Функция ПриВыполненииТестированияНаСервере(Тест)
	
	СостояниеТеста = ТЦСервер.СостояниеТеста(Тест);
	НомерСостояния = ТЦСервер.НомерСостояния(СостояниеТеста.Состояние);
	ОбновитьСостояние(НомерСостояния);
	ОбновитьИндикаторы(СостояниеТеста, НомерСостояния);
	
	Возврат СостояниеТеста;
	
КонецФункции // ПриВыполненииТестированияНаСервере()

&НаСервере
// Обновить индикаторы прогресса выполнения теста
//
// Параметры:
//  Состояние - Число, номер текущего состояния
//
Процедура ОбновитьИндикаторы(СостояниеТеста, НомерСостояния)
	
	Состояние = СостояниеТеста.Состояние;
	Прошло = ТекущаяДата() - СостояниеТеста.НачалоСостояния;
	
	Если Состояние = Перечисления.ТЦСостояние.Подготовка Тогда
		ЛокальныйПрогресс = ?(Прошло > СостояниеТеста.ТаймаутПодготовки
			Или СостояниеТеста.ТаймаутПодготовки = 0, 1,
			Прошло / СостояниеТеста.ТаймаутПодготовки);
	ИначеЕсли Состояние = Перечисления.ТЦСостояние.Инициализация Тогда
		ЛокальныйПрогресс = ?(Прошло > СостояниеТеста.ТаймаутИнициализации
			Или СостояниеТеста.ТаймаутИнициализации = 0, 1,
			Прошло / СостояниеТеста.ТаймаутИнициализации);
	ИначеЕсли Состояние = Перечисления.ТЦСостояние.Выполнение Тогда
		ЛокальныйПрогресс = ?(Прошло > СостояниеТеста.ТаймаутВыполнения
			Или СостояниеТеста.ТаймаутВыполнения = 0, 1,
			Прошло / СостояниеТеста.ТаймаутВыполнения);
	ИначеЕсли Состояние = Перечисления.ТЦСостояние.ЗаписьРезультатов Тогда
		ЛокальныйПрогресс = ?(Прошло > СостояниеТеста.ТаймаутЗаписиРезультатов
			Или СостояниеТеста.ТаймаутЗаписиРезультатов = 0, 1,
			Прошло / СостояниеТеста.ТаймаутЗаписиРезультатов);
	ИначеЕсли Состояние = Перечисления.ТЦСостояние.УдалениеДанных Тогда
		ЛокальныйПрогресс = ?(Прошло > СостояниеТеста.ТаймаутУдаленияДанных
			Или СостояниеТеста.ТаймаутУдаленияДанных = 0, 1,
			Прошло / СостояниеТеста.ТаймаутУдаленияДанных);
	ИначеЕсли Состояние = Перечисления.ТЦСостояние.Неактивен Тогда
		ЛокальныйПрогресс = 1;
	КонецЕсли;
	
	Прогресс = (ЛокальныйПрогресс + НомерСостояния - 1) * 100;
	
КонецПроцедуры // ОбновитьИндикаторы()

&НаСервере
// Обновить состояние шага
//
// Параметры:
//  Состояние - Число, номер текущего состояния
//
Процедура ОбновитьСостояние(НомерСостояния)
	
	Б = БиблиотекаКартинок;
	Н = ?(НомерСостояния = 1, 2, ?(НомерСостояния > 1, 3, 1));
	Элементы.КартинкаПодготовка.Картинка = Б["ТЦПодготовка" + Н];
	Н = ?(НомерСостояния = 2, 2, ?(НомерСостояния > 2, 3, 1));
	Элементы.КартинкаИнициализация.Картинка = Б["ТЦИнициализация" + Н];
	Н = ?(НомерСостояния = 3, 2, ?(НомерСостояния > 3, 3, 1));
	Элементы.КартинкаВыполнение.Картинка = Б["ТЦВыполнение" + Н];
	Н = ?(НомерСостояния = 4, 2, ?(НомерСостояния > 4, 3, 1));
	Элементы.КартинкаЗаписьРезультатов.Картинка = Б["ТЦЗаписьРезультатов" + Н];
	Н = ?(НомерСостояния = 5, 2, ?(НомерСостояния > 5, 3, 1));
	Элементы.КартинкаУдалениеДанных.Картинка = Б["ТЦУдалениеДанных" + Н];
	
КонецПроцедуры // ОбновитьСостояние()

&НаКлиенте
// Инициализация данных
//
Процедура Инициализировать()
	
	мТест = ТЦСервер.ТекущийТест();
	
	ИмяНеопределено = "Перечисление.ТЦРезультатВыполнения.Неопределено";
	ИмяУспешно = "Перечисление.ТЦРезультатВыполнения.Успешно";
	ИмяОшибка = "Перечисление.ТЦРезультатВыполнения.Ошибка";
	ИмяПредупреждение = "Перечисление.ТЦРезультатВыполнения.Предупреждение";
	кНеопределено = ПредопределенноеЗначение(ИмяНеопределено);
	кУспешно = ПредопределенноеЗначение(ИмяУспешно);
	кПредупрежедение = ПредопределенноеЗначение(ИмяПредупреждение);
	кОшибка = ПредопределенноеЗначение(ИмяОшибка);
	
КонецПроцедуры // Инициализировать()

&НаКлиенте
Процедура Стоп(Команда)
	
	Текст = "Прервать выполняющийся тест?";
	РезультатВопроса = Вопрос(
		Текст,
		РежимДиалогаВопрос.ДаНет,,
		КодВозвратаДиалога.Нет,
		"Тест-центр");
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	мОстановлен = Истина;
	ТЦСервер.ПрерватьВыполнениеТеста(мТест);
	Элементы.Стоп.Доступность = Ложь;
	ТЦКлиент.ВыполнитьТестирование();
	
КонецПроцедуры

&НаКлиенте
Процедура Завершить(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Не мОстановлен Тогда
		Отказ = Не ТЦКлиент.ЗакрытьОкноСостоянияВыполненияТеста();
	КонецЕсли;
	
	мОстановлен = Ложь;
	
КонецПроцедуры
